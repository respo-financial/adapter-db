/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { CreditBureauDetailListRelationFilter } from "../../creditBureauDetail/base/CreditBureauDetailListRelationFilter";
import { AddressDetailListRelationFilter } from "../../addressDetail/base/AddressDetailListRelationFilter";
import { EmploymentDetailListRelationFilter } from "../../employmentDetail/base/EmploymentDetailListRelationFilter";
import { UserOnboardingStateWhereUniqueInput } from "../../userOnboardingState/base/UserOnboardingStateWhereUniqueInput";

@InputType()
class UserDetailWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  userId?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  mobileNumber?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  pan?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  panDob?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  firstName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  lastName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  personalEmail?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => CreditBureauDetailListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CreditBureauDetailListRelationFilter)
  @IsOptional()
  @Field(() => CreditBureauDetailListRelationFilter, {
    nullable: true,
  })
  creditBureauDetails?: CreditBureauDetailListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => AddressDetailListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AddressDetailListRelationFilter)
  @IsOptional()
  @Field(() => AddressDetailListRelationFilter, {
    nullable: true,
  })
  addressDetails?: AddressDetailListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => EmploymentDetailListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EmploymentDetailListRelationFilter)
  @IsOptional()
  @Field(() => EmploymentDetailListRelationFilter, {
    nullable: true,
  })
  employmentDetails?: EmploymentDetailListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => UserOnboardingStateWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserOnboardingStateWhereUniqueInput)
  @IsOptional()
  @Field(() => UserOnboardingStateWhereUniqueInput, {
    nullable: true,
  })
  userOnboardingState?: UserOnboardingStateWhereUniqueInput;
}

export { UserDetailWhereInput as UserDetailWhereInput };
