/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsBoolean,
  IsDate,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { CreditBureauDetailUpdateManyWithoutUserDetailsInput } from "./CreditBureauDetailUpdateManyWithoutUserDetailsInput";
import { AddressDetailUpdateManyWithoutUserDetailsInput } from "./AddressDetailUpdateManyWithoutUserDetailsInput";
import { EmploymentDetailUpdateManyWithoutUserDetailsInput } from "./EmploymentDetailUpdateManyWithoutUserDetailsInput";
import { UserOnboardingStateWhereUniqueInput } from "../../userOnboardingState/base/UserOnboardingStateWhereUniqueInput";

@InputType()
class UserDetailUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  userId?: string;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isPersonalEmailVerified?: boolean | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  mobileNumber?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  userProvidedFirstName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  userProvidedLastName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  aadhaarName?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  aadhaarDob?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  panName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  pan?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  panDob?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  personalEmail?: string | null;

  @ApiProperty({
    required: false,
    type: () => CreditBureauDetailUpdateManyWithoutUserDetailsInput,
  })
  @ValidateNested()
  @Type(() => CreditBureauDetailUpdateManyWithoutUserDetailsInput)
  @IsOptional()
  @Field(() => CreditBureauDetailUpdateManyWithoutUserDetailsInput, {
    nullable: true,
  })
  creditBureauDetails?: CreditBureauDetailUpdateManyWithoutUserDetailsInput;

  @ApiProperty({
    required: false,
    type: () => AddressDetailUpdateManyWithoutUserDetailsInput,
  })
  @ValidateNested()
  @Type(() => AddressDetailUpdateManyWithoutUserDetailsInput)
  @IsOptional()
  @Field(() => AddressDetailUpdateManyWithoutUserDetailsInput, {
    nullable: true,
  })
  addressDetails?: AddressDetailUpdateManyWithoutUserDetailsInput;

  @ApiProperty({
    required: false,
    type: () => EmploymentDetailUpdateManyWithoutUserDetailsInput,
  })
  @ValidateNested()
  @Type(() => EmploymentDetailUpdateManyWithoutUserDetailsInput)
  @IsOptional()
  @Field(() => EmploymentDetailUpdateManyWithoutUserDetailsInput, {
    nullable: true,
  })
  employmentDetails?: EmploymentDetailUpdateManyWithoutUserDetailsInput;

  @ApiProperty({
    required: false,
    type: () => UserOnboardingStateWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserOnboardingStateWhereUniqueInput)
  @IsOptional()
  @Field(() => UserOnboardingStateWhereUniqueInput, {
    nullable: true,
  })
  userOnboardingState?: UserOnboardingStateWhereUniqueInput | null;
}

export { UserDetailUpdateInput as UserDetailUpdateInput };
