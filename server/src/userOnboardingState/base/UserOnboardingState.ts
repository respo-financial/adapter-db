/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsBoolean,
  IsOptional,
  IsString,
  IsDate,
  IsEnum,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { EnumUserOnboardingStateEmploymentType } from "./EnumUserOnboardingStateEmploymentType";
import { EnumUserOnboardingStateApNameMatchStatus } from "./EnumUserOnboardingStateApNameMatchStatus";
import { EnumUserOnboardingStateDobMatchStatus } from "./EnumUserOnboardingStateDobMatchStatus";
import { EnumUserOnboardingStateL1Status } from "./EnumUserOnboardingStateL1Status";
import { EnumUserOnboardingStateL2Status } from "./EnumUserOnboardingStateL2Status";
import { EnumUserOnboardingStateCombinedStatus } from "./EnumUserOnboardingStateCombinedStatus";
import { UserDetail } from "../../userDetail/base/UserDetail";

@ObjectType()
class UserOnboardingState {
  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isUserProvidedNameValid!: boolean | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    enum: EnumUserOnboardingStateEmploymentType,
  })
  @IsEnum(EnumUserOnboardingStateEmploymentType)
  @IsOptional()
  @Field(() => EnumUserOnboardingStateEmploymentType, {
    nullable: true,
  })
  employmentType?:
    | "SALARIED"
    | "SELF_EMPLOYED"
    | "STUDENT"
    | "PROFESSIONAL"
    | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isEmploymentEmailValidated!: boolean | null;

  @ApiProperty({
    required: false,
    enum: EnumUserOnboardingStateApNameMatchStatus,
  })
  @IsEnum(EnumUserOnboardingStateApNameMatchStatus)
  @IsOptional()
  @Field(() => EnumUserOnboardingStateApNameMatchStatus, {
    nullable: true,
  })
  apNameMatchStatus?: "success" | "failed" | "manual" | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isAddressValid!: boolean | null;

  @ApiProperty({
    required: false,
    enum: EnumUserOnboardingStateDobMatchStatus,
  })
  @IsEnum(EnumUserOnboardingStateDobMatchStatus)
  @IsOptional()
  @Field(() => EnumUserOnboardingStateDobMatchStatus, {
    nullable: true,
  })
  dobMatchStatus?: "success" | "failed" | "manual" | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  inApprovedRegion!: boolean | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  inBlacklistedRegion!: boolean | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isPennytransferSuccess!: boolean | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isEnachCreated!: boolean | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isSelfieMatchSuccess!: boolean | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isLoanAgreementSigned!: boolean | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isCbSuccess!: boolean | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isPanValid!: boolean | null;

  @ApiProperty({
    required: false,
    enum: EnumUserOnboardingStateL1Status,
  })
  @IsEnum(EnumUserOnboardingStateL1Status)
  @IsOptional()
  @Field(() => EnumUserOnboardingStateL1Status, {
    nullable: true,
  })
  l1Status?:
    | "Accept"
    | "Manual"
    | "Waitlist"
    | "Fail"
    | "Reject"
    | "Refer"
    | null;

  @ApiProperty({
    required: false,
    enum: EnumUserOnboardingStateL2Status,
  })
  @IsEnum(EnumUserOnboardingStateL2Status)
  @IsOptional()
  @Field(() => EnumUserOnboardingStateL2Status, {
    nullable: true,
  })
  l2Status?: "Accept" | "Manual" | "Waitlist" | "Fail" | "Reject" | null;

  @ApiProperty({
    required: false,
    enum: EnumUserOnboardingStateCombinedStatus,
  })
  @IsEnum(EnumUserOnboardingStateCombinedStatus)
  @IsOptional()
  @Field(() => EnumUserOnboardingStateCombinedStatus, {
    nullable: true,
  })
  combinedStatus?: "Accept" | "Manual" | "Waitlist" | "Fail" | "Reject" | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isPersonalEmailVerified!: boolean | null;

  @ApiProperty({
    required: false,
    type: () => [UserDetail],
  })
  @ValidateNested()
  @Type(() => UserDetail)
  @IsOptional()
  userDetails?: Array<UserDetail>;
}

export { UserOnboardingState as UserOnboardingState };
