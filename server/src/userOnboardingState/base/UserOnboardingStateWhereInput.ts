/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, IsEnum, ValidateNested } from "class-validator";
import { EnumUserOnboardingStateEmploymentType } from "./EnumUserOnboardingStateEmploymentType";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { EnumUserOnboardingStateApNameMatchStatus } from "./EnumUserOnboardingStateApNameMatchStatus";
import { EnumUserOnboardingStateDobMatchStatus } from "./EnumUserOnboardingStateDobMatchStatus";
import { EnumUserOnboardingStateL1Status } from "./EnumUserOnboardingStateL1Status";
import { EnumUserOnboardingStateL2Status } from "./EnumUserOnboardingStateL2Status";
import { EnumUserOnboardingStateCombinedStatus } from "./EnumUserOnboardingStateCombinedStatus";
import { UserDetailListRelationFilter } from "../../userDetail/base/UserDetailListRelationFilter";

@InputType()
class UserOnboardingStateWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    enum: EnumUserOnboardingStateEmploymentType,
  })
  @IsEnum(EnumUserOnboardingStateEmploymentType)
  @IsOptional()
  @Field(() => EnumUserOnboardingStateEmploymentType, {
    nullable: true,
  })
  employmentType?: "SALARIED" | "SELF_EMPLOYED" | "STUDENT" | "PROFESSIONAL";

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  isEmploymentEmailValidated?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumUserOnboardingStateApNameMatchStatus,
  })
  @IsEnum(EnumUserOnboardingStateApNameMatchStatus)
  @IsOptional()
  @Field(() => EnumUserOnboardingStateApNameMatchStatus, {
    nullable: true,
  })
  apNameMatchStatus?: "success" | "failed" | "manual";

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  isAddressValid?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumUserOnboardingStateDobMatchStatus,
  })
  @IsEnum(EnumUserOnboardingStateDobMatchStatus)
  @IsOptional()
  @Field(() => EnumUserOnboardingStateDobMatchStatus, {
    nullable: true,
  })
  dobMatchStatus?: "success" | "failed" | "manual";

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  inApprovedRegion?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  inBlacklistedRegion?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  isPennytransferSuccess?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  isEnachCreated?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  isSelfieMatchSuccess?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  isLoanAgreementSigned?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  isCbSuccess?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  isPanValid?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumUserOnboardingStateL1Status,
  })
  @IsEnum(EnumUserOnboardingStateL1Status)
  @IsOptional()
  @Field(() => EnumUserOnboardingStateL1Status, {
    nullable: true,
  })
  l1Status?: "Accept" | "Manual" | "Waitlist" | "Fail" | "Reject" | "Refer";

  @ApiProperty({
    required: false,
    enum: EnumUserOnboardingStateL2Status,
  })
  @IsEnum(EnumUserOnboardingStateL2Status)
  @IsOptional()
  @Field(() => EnumUserOnboardingStateL2Status, {
    nullable: true,
  })
  l2Status?: "Accept" | "Manual" | "Waitlist" | "Fail" | "Reject";

  @ApiProperty({
    required: false,
    enum: EnumUserOnboardingStateCombinedStatus,
  })
  @IsEnum(EnumUserOnboardingStateCombinedStatus)
  @IsOptional()
  @Field(() => EnumUserOnboardingStateCombinedStatus, {
    nullable: true,
  })
  combinedStatus?: "Accept" | "Manual" | "Waitlist" | "Fail" | "Reject";

  @ApiProperty({
    required: false,
    type: () => UserDetailListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UserDetailListRelationFilter)
  @IsOptional()
  @Field(() => UserDetailListRelationFilter, {
    nullable: true,
  })
  userDetails?: UserDetailListRelationFilter;
}

export { UserOnboardingStateWhereInput as UserOnboardingStateWhereInput };
