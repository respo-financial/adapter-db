/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumEmploymentDetailEmploymentVerificationProvider } from "./EnumEmploymentDetailEmploymentVerificationProvider";
import { IsEnum, IsOptional, ValidateNested } from "class-validator";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { EnumEmploymentDetailEmploymentVerificationStatus } from "./EnumEmploymentDetailEmploymentVerificationStatus";
import { StringFilter } from "../../util/StringFilter";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { UserDetailWhereUniqueInput } from "../../userDetail/base/UserDetailWhereUniqueInput";

@InputType()
class EmploymentDetailWhereInput {
  @ApiProperty({
    required: false,
    enum: EnumEmploymentDetailEmploymentVerificationProvider,
  })
  @IsEnum(EnumEmploymentDetailEmploymentVerificationProvider)
  @IsOptional()
  @Field(() => EnumEmploymentDetailEmploymentVerificationProvider, {
    nullable: true,
  })
  employmentVerificationProvider?: "zype" | "karza";

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  isEmploymentEmailValid?: StringNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumEmploymentDetailEmploymentVerificationStatus,
  })
  @IsEnum(EnumEmploymentDetailEmploymentVerificationStatus)
  @IsOptional()
  @Field(() => EnumEmploymentDetailEmploymentVerificationStatus, {
    nullable: true,
  })
  employmentVerificationStatus?: "verified" | "notVerified" | "Manual";

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  email?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  companyName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  isOthers?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: () => UserDetailWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserDetailWhereUniqueInput)
  @IsOptional()
  @Field(() => UserDetailWhereUniqueInput, {
    nullable: true,
  })
  userDetail?: UserDetailWhereUniqueInput;
}

export { EmploymentDetailWhereInput as EmploymentDetailWhereInput };
